const router = require('express').Router()
const mongoose = require('mongoose')
const Community = mongoose.model('Community')
const CommunityProgress = mongoose.model('CommunityProgress')
const deploy = require('@utils/deploy')

/**
 * @apiDefine CommunityData
 * @apiSuccess {Boolean} isClosed
 * @apiSuccess {String} communityAddress
 * @apiSuccess {String} homeTokenAddress
 * @apiSuccess {String} foreignTokenAddress
 * @apiSuccess {String} foreignBridgeAddress
 * @apiSuccess {String} homeBridgeAddress
 */

/**
 * @apiDefine CommunityProgressData
 * @apiSuccess {String} _id Id of the deploy progress
 * @apiSuccess {Object} steps Steps with info about each step
 * @apiSuccess {String} communityAddress Community address if deploy process is completed
 * @apiSuccess {Boolean} done Done status if the deploy process is completed
 */

/**
 * @api {get} /communities/:communityAddress Fetch community by community address
 * @apiName GetCommunity
 * @apiGroup Community
 *
 * @apiParam {String} communityAddress Community address
 *
 * @apiUse CommunityData
 */
router.get('/:communityAddress', async (req, res, next) => {
  const { communityAddress } = req.params
  const community = await Community.findOne({ communityAddress }).lean()
  return res.json({ data: community })
})

/**
 * @api {get} /communities/deploy Start community deploy process
 * @apiName DeployCommunity
 * @apiGroup Community
 *
 * @apiParam {Object} steps The steps (with arguments) to deploy
 *
 * @apiSuccess {Object} steps Steps to deploy
 */

router.post('/deploy', async (req, res, next) => {
  const { steps } = req.body
  const communityProgress = await new CommunityProgress({ steps }).save()

  deploy(communityProgress)

  return res.json({ data: communityProgress })
})

/**
 * @api {get} /communities/progress/:id Fetch community progress by id
 * @apiName GetCommunityProgress
 * @apiGroup CommunityProgress
 *
 * @apiParam {String} id Auto Generated by the database
 *
 * @apiUse CommunityProgressData
 */
router.get('/progress/:id', async (req, res, next) => {
  const { id } = req.params
  const communityProgress = await CommunityProgress.findById(id)
  return res.json({ data: communityProgress })
})

/**
 * @api {get} /communities/progress Fetch community progress by community address
 * @apiName GetCommunityProgressByCommunityAddress
 * @apiGroup CommunityProgress
 *
 * @apiParam {String} communityAddress Community address
 *
 * @apiUse CommunityProgressData
 */
router.get('/progress', async (req, res, next) => {
  const { communityAddress } = req.query
  const communityProgress = await CommunityProgress.findOne({ communityAddress })
  return res.json({ data: communityProgress })
})

module.exports = router
