version: '3'
volumes:
  server_node_modules:
  client_node_modules:
services:
    mongo:
        container_name: $PROJECT_NAME-mongo
        image: mongo:latest
        user: "${UID}:${GID}"
        restart: always
        env_file: .env
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASS}
            - MONGO_INITDB_DATABASE=${MONGO_DBNAME}
        volumes:
            - ./docker/mongo/db:/data/db
            - ./docker/mongo/config:/data/configdb
        networks:
            internal-network:
            external-network:
                aliases:
                    - $PROJECT_NAME-mongo
        ports:
            - 27017
    ipfs:
        container_name: $PROJECT_NAME-ipfs
        image: ipfs/go-ipfs:latest
        user: "${UID}:${GID}"
        restart: always
        env_file: .env
        networks:
            internal-network:
            external-network:
                aliases:
                    - $PROJECT_NAME-ipfs
    geth:
        container_name: $PROJECT_NAME-geth
        image: kunstmaan/ethereum-geth:latest
        user: "${UID}:${GID}"
        restart: always
        env_file: .env
        command: geth --datadir=/geth --testnet --rpc --rpcaddr 0.0.0.0 --rpcapi="db,eth,net,web3,personal,web3"
        networks:
            internal-network:
            external-network:
                aliases:
                    - $PROJECT_NAME-geth
        ports:
            - 8545
        depends_on:
            - ipfs
        volumes:
            - ./docker/geth/:/geth
    server:
        container_name: $PROJECT_NAME-server
        build: ./server
        user: "${UID}:${GID}"
        restart: always
        env_file: .env
        depends_on:
            - mongo
            - geth
        volumes:
            - ./server/:/project
        command: "npm run dev"
        networks:
            internal-network:
            external-network:
                aliases:
                    - $PROJECT_NAME-server
        ports:
            - $APP_PORT
        environment:
            - NODE_ENV=${APP_ENV}
            - PORT=${APP_PORT}
            - COMMUNITY_MONGO_URI=mongodb://mongo/${MONGO_DBNAME}
            - COMMUNITY_MONGO_USER=${MONGO_USER}
            - COMMUNITY_MONGO_PASS=${MONGO_PASS}
            - COMMUNITY_MONGO_AUTH_SOURCE=${MONGO_AUTH_SOURCE}
            - COMMUNITY_IPFS_HOST=ipfs
            - COMMUNITY_IPFS_PORT=${IPFS_PORT}
            - COMMUNITY_IPFS_PROTOCOL=${IPFS_PROTO}
            - COMMUNITY_IPFS_TIMEOUT=${IPFS_READ_TIMEOUT}
            - COMMUNITY_API_SECRET=${SERVER_SECRET}
            - COMMUNITY_MANDRILL_API_KEY=${MANDRILL_API}
            - COMMUNITY_MANDRILL_SEND_TO=${MANDRILL_SEND_TO}
            - COMMUNITY_MAILCHIMP_API_BASE=${MAILCHIMP_API_BASE}
            - COMMUNITY_MAILCHIMP_LIST=${MAILCHIMP_LIST_NAME}
            - COMMUNITY_AMAZON_BUCKET_API=${AMAZON_BUCKET_API}
            - COMMUNITY_WEB3_PROVIDER=http://geth:8545
    client:
        container_name: $PROJECT_NAME-client
        build: ./client
        user: "${UID}:${GID}"
        restart: always
        env_file: .env
        depends_on:
            - server
        volumes:
            - ./client/:/project
        command: "npm start"
        networks:
            internal-network:
            external-network:
                aliases:
                    - $PROJECT_NAME-client
        ports:
            - $APP_PORT
        environment:
            - NODE_ENV=${APP_ENV}
            - PORT=${APP_PORT}
            - COMMUNITY_COLU_HOST=server
            - COMMUNITY_COLU_PORT=${APP_PORT}
networks:
  internal-network:
  external-network:
    external:
      name: $PROJECT_NAME
